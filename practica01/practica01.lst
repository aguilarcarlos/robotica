CCS PCM C Compiler, Version 4.010, 35536               15-oct.-13 15:02

               Filename: practica01.lst

               ROM used: 256 words (3%)
                         Largest free fragment is 2048
               RAM used: 10 (3%) at main() level
                         20 (5%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   075
0003:  NOP
.................... /// Librería del pic con .h 
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
....................  
.................... /// Configuración del adc a resulción de 10bits          
.................... #device adc=10   
....................  
.................... /// Se configurar el valor del delay con el del clock 
.................... #use delay(clock=4000000) 
*
0004:  MOVLW  24
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETLW  00
....................  
.................... /// Desactivación de fuses o activación  
.................... #fuses XT,NOWDT,NOPROTECT,NOLVP,PUT 
....................  
.................... /// Se configuran los grupos de pines RA,RC para entrada/salida 
.................... #use fast_io(a) 
.................... #use fast_io(b) 
....................  
.................... /// Variable enteera para las lecturas 
.................... float data; 
....................  
.................... void main() 
.................... { 
*
0075:  CLRF   04
0076:  BCF    03.7
0077:  MOVLW  1F
0078:  ANDWF  03,F
0079:  BSF    03.5
007A:  BSF    1F.0
007B:  BSF    1F.1
007C:  BSF    1F.2
007D:  BCF    1F.3
007E:  MOVLW  07
007F:  MOVWF  1C
.................... 	/// Configura los puertos como entrada o salida 
.................... 	set_tris_a(1); 
0080:  MOVLW  01
0081:  MOVWF  05
.................... 	set_tris_b(0); 
0082:  MOVLW  00
0083:  MOVWF  06
.................... 	 
.................... 	/// Se configura el reloj interno que trabaja todo el tiempo 
.................... 	setup_adc(ADC_CLOCK_INTERNAL); 
0084:  BCF    1F.6
0085:  BCF    03.5
0086:  BSF    1F.6
0087:  BSF    1F.7
0088:  BSF    03.5
0089:  BSF    1F.7
008A:  BCF    03.5
008B:  BSF    1F.0
....................  
.................... 	/// Se configuran los pines con AN# para entradas anaogas 
.................... 	setup_adc_ports(ALL_ANALOG); 
008C:  BSF    03.5
008D:  BCF    1F.0
008E:  BCF    1F.1
008F:  BCF    1F.2
0090:  BCF    1F.3
....................  
.................... 	/// Se configura el canal de entrada AN0 
.................... 	// set_adc_channel(1); 
....................  
.................... 	do{ 
.................... 		/// Se configura el canal de entrada AN0 
.................... 		set_adc_channel(0); 
0091:  MOVLW  00
0092:  MOVWF  78
0093:  BCF    03.5
0094:  MOVF   1F,W
0095:  ANDLW  C7
0096:  IORWF  78,W
0097:  MOVWF  1F
....................  
.................... 		///Retardo de 10 milisegundos 
.................... 		delay_ms(10); 
0098:  MOVLW  0A
0099:  MOVWF  24
009A:  CALL   004
....................  
.................... 		/// int read se llena con lo que lee en el adc 
.................... 		data = read_adc(); 
009B:  BSF    1F.2
009C:  BTFSC  1F.2
009D:  GOTO   09C
009E:  MOVF   1E,W
009F:  MOVWF  7A
00A0:  BSF    03.5
00A1:  MOVF   1E,W
00A2:  BCF    03.5
00A3:  MOVWF  24
00A4:  MOVF   1E,W
00A5:  MOVWF  25
00A6:  CALL   019
00A7:  MOVF   7A,W
00A8:  MOVWF  23
00A9:  MOVF   79,W
00AA:  MOVWF  22
00AB:  MOVF   78,W
00AC:  MOVWF  21
00AD:  MOVF   77,W
00AE:  MOVWF  20
.................... 		 
.................... 		///Retardo 
.................... 		delay_ms(10); 
00AF:  MOVLW  0A
00B0:  MOVWF  24
00B1:  CALL   004
.................... 		 
.................... 		/// Condicional para activar los LED's 
.................... 		if(data > 300) 
00B2:  CLRF   27
00B3:  CLRF   26
00B4:  MOVLW  16
00B5:  MOVWF  25
00B6:  MOVLW  87
00B7:  MOVWF  24
00B8:  MOVF   23,W
00B9:  MOVWF  2B
00BA:  MOVF   22,W
00BB:  MOVWF  2A
00BC:  MOVF   21,W
00BD:  MOVWF  29
00BE:  MOVF   20,W
00BF:  MOVWF  28
00C0:  CALL   036
00C1:  BTFSS  03.0
00C2:  GOTO   0C5
.................... 		{ 
.................... 			output_high(PIN_B1); 
00C3:  BSF    06.1
.................... 		} 
.................... 		else 
00C4:  GOTO   0C6
.................... 		{ 
.................... 			output_low(PIN_B1); 
00C5:  BCF    06.1
.................... 		} 
.................... 		 
.................... 		/// Configuración del el canal de entrada AN1 
.................... 		set_adc_channel(1); 
00C6:  MOVLW  08
00C7:  MOVWF  78
00C8:  MOVF   1F,W
00C9:  ANDLW  C7
00CA:  IORWF  78,W
00CB:  MOVWF  1F
.................... 		 
.................... 		delay_ms(10); 
00CC:  MOVLW  0A
00CD:  MOVWF  24
00CE:  CALL   004
.................... 		 
.................... 		data = read_adc(); 
00CF:  BSF    1F.2
00D0:  BTFSC  1F.2
00D1:  GOTO   0D0
00D2:  MOVF   1E,W
00D3:  MOVWF  7A
00D4:  BSF    03.5
00D5:  MOVF   1E,W
00D6:  BCF    03.5
00D7:  MOVWF  24
00D8:  MOVF   1E,W
00D9:  MOVWF  25
00DA:  CALL   019
00DB:  MOVF   7A,W
00DC:  MOVWF  23
00DD:  MOVF   79,W
00DE:  MOVWF  22
00DF:  MOVF   78,W
00E0:  MOVWF  21
00E1:  MOVF   77,W
00E2:  MOVWF  20
.................... 		 
.................... 		delay_ms(10); 
00E3:  MOVLW  0A
00E4:  MOVWF  24
00E5:  CALL   004
.................... 		 
.................... 		/// Condicional para activar los LED's 
.................... 		if(data > 300) 
00E6:  CLRF   27
00E7:  CLRF   26
00E8:  MOVLW  16
00E9:  MOVWF  25
00EA:  MOVLW  87
00EB:  MOVWF  24
00EC:  MOVF   23,W
00ED:  MOVWF  2B
00EE:  MOVF   22,W
00EF:  MOVWF  2A
00F0:  MOVF   21,W
00F1:  MOVWF  29
00F2:  MOVF   20,W
00F3:  MOVWF  28
00F4:  CALL   036
00F5:  BTFSS  03.0
00F6:  GOTO   0F9
.................... 		{ 
.................... 			output_high(PIN_B2); 
00F7:  BSF    06.2
.................... 		} 
.................... 		else 
00F8:  GOTO   0FA
.................... 		{ 
.................... 			output_low(PIN_B2); 
00F9:  BCF    06.2
.................... 		} 
.................... 		 
.................... 		delay_ms(10); 
00FA:  MOVLW  0A
00FB:  MOVWF  24
00FC:  CALL   004
.................... 			 
.................... 	} while(true); 
.................... } 
00FD:  BSF    03.5
00FE:  GOTO   091
00FF:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
